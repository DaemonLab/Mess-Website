# Generated by Django 4.1.7 on 2024-01-24 17:20

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='About',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(help_text='The text added in this text field will show up in the about section of the home page.', verbose_name='Description')),
            ],
            options={
                'verbose_name': 'About Us',
                'verbose_name_plural': 'About Us',
            },
        ),
        migrations.CreateModel(
            name='Allocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.CharField(blank=True, default=None, help_text='This contains the Allocation Id', max_length=30, null=True, verbose_name='Allocation Id')),
                ('high_tea', models.BooleanField(blank=True, default=False, help_text='This contains the info if high tea is taken or not', null=True, verbose_name='High Tea')),
                ('jain', models.BooleanField(blank=True, default=False, help_text='This contains the info if jain food is taken or not', null=True, verbose_name='Jain')),
                ('first_pref', models.CharField(blank=True, default=None, help_text='This contians the first preference caterer of the student', max_length=10, null=True, verbose_name='First Preference')),
                ('second_pref', models.CharField(blank=True, default=None, help_text='This contians the first preference caterer of the student', max_length=10, null=True, verbose_name='Second Preference')),
                ('third_pref', models.CharField(blank=True, default=None, help_text='This contians the first preference caterer of the student', max_length=10, null=True, verbose_name='Third Preference')),
            ],
            options={
                'verbose_name': 'Allocation Detail',
                'verbose_name_plural': 'Allocation Details',
            },
        ),
        migrations.CreateModel(
            name='AllocationSpring23',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.CharField(blank=True, default=None, help_text='This contains the Allocation Id', max_length=30, null=True, verbose_name='Allocation Id')),
                ('caterer_name', models.CharField(blank=True, default='', help_text='The text in this text field contains the caterer name.', max_length=50, null=True, verbose_name='Caterer Name')),
                ('high_tea', models.BooleanField(blank=True, default=False, help_text='This contains the info if high tea is taken or not', null=True, verbose_name='High Tea')),
                ('first_pref', models.CharField(blank=True, default=None, help_text='This contians the first preference caterer of the student', max_length=10, null=True, verbose_name='First Preference')),
                ('second_pref', models.CharField(blank=True, default=None, help_text='This contians the first preference caterer of the student', max_length=10, null=True, verbose_name='Second Preference')),
                ('third_pref', models.CharField(blank=True, default=None, help_text='This contians the first preference caterer of the student', max_length=10, null=True, verbose_name='Third Preference')),
            ],
            options={
                'verbose_name': 'Allocation Details for Spring 2023',
                'verbose_name_plural': 'Allocation Details for Spring 2023',
            },
        ),
        migrations.CreateModel(
            name='Cafeteria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='This contains the name of the Service', max_length=30, verbose_name='Name of Service')),
                ('poc', models.CharField(help_text='This contains the name of the point of contact of the respective Service', max_length=30, verbose_name='Point of Contact')),
                ('contact', models.CharField(blank=True, help_text='This contains the contact(phone number) of the POC', max_length=10, null=True, verbose_name='Phone Number')),
                ('image', models.ImageField(blank=True, null=True, upload_to='static/images', verbose_name='Image of Service')),
            ],
            options={
                'verbose_name': 'Additional Services',
                'verbose_name_plural': 'Additional Services',
            },
        ),
        migrations.CreateModel(
            name='Carousel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='static/images', verbose_name='Carousel Images')),
            ],
            options={
                'verbose_name': 'Carousel',
                'verbose_name_plural': 'Carousel',
            },
        ),
        migrations.CreateModel(
            name='Caterer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The text in this text field contains the caterer name.', max_length=50, verbose_name='Caterer Name')),
                ('upper_description', models.TextField(help_text='This contains the description of the respective caterer that will show on the upper side.', verbose_name='Upper Description')),
                ('sheet_url', models.URLField(help_text='This contains the google sheets url link for the respective caterers menu.', verbose_name='Menu URL')),
                ('lower_description', models.TextField(default='', help_text='This contains the description of the respective caterer that will show on the lower side.', verbose_name='Lower Discription')),
                ('student_limit', models.IntegerField(default=0, help_text='The limit on number of students it can have', verbose_name='Caterers Student Limit')),
                ('visible', models.BooleanField(default=False, help_text='If the caterer is visible or not to the students', null=True, verbose_name='Visible')),
                ('email', models.EmailField(default='', help_text='The email of the caterer', max_length=254, verbose_name='Caterer Email')),
            ],
            options={
                'verbose_name': 'Caterer',
                'verbose_name_plural': 'Caterers',
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('occupation', models.TextField(help_text='This contains the occupation of the contact to be added', verbose_name='Occupation')),
                ('hostel_sec', models.BooleanField(verbose_name='Dining Secretary')),
                ('name', models.CharField(blank=True, help_text='This contains the name of the contact to be added', max_length=30, null=True, verbose_name='Name')),
                ('contact', models.CharField(blank=True, help_text='This contains phone number of the contact to be added', max_length=12, null=True, verbose_name='Phone Number')),
                ('email', models.EmailField(help_text='This contains email of the contact to be added', max_length=254, verbose_name='Email')),
            ],
            options={
                'verbose_name': 'Contact',
                'verbose_name_plural': 'Contacts',
            },
        ),
        migrations.CreateModel(
            name='Fee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prev_sem_fee', models.IntegerField(default=0, null=True, verbose_name='Previous Semester Fee')),
                ('upcoming_sem_fee', models.IntegerField(default=0, null=True, verbose_name='Upcoming Semester Fee')),
                ('program', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='Academic Program')),
            ],
            options={
                'verbose_name': 'Fee Details',
                'verbose_name_plural': 'Fee Details',
            },
        ),
        migrations.CreateModel(
            name='Form',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heading', models.CharField(help_text='This contains the heading of the form to be added.', max_length=30, verbose_name='Form Heading')),
                ('description', models.CharField(blank=True, help_text='This contains the description of the form to be added.', max_length=120, verbose_name='Form Description')),
                ('url', models.URLField(help_text='This contains the URL link of the form.', verbose_name='Form URL')),
            ],
            options={
                'verbose_name': 'Form',
                'verbose_name_plural': 'Forms',
            },
        ),
        migrations.CreateModel(
            name='LeftLongRebate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(default='', max_length=30, verbose_name='email')),
                ('start_date', models.DateField(blank=True, help_text='start date of the rebate', null=True)),
                ('end_date', models.DateField(blank=True, help_text='end date of the rebate', null=True)),
            ],
            options={
                'verbose_name': 'Left Long Rebate',
                'verbose_name_plural': 'Left Long Rebate',
            },
        ),
        migrations.CreateModel(
            name='LeftShortRebate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(default='', max_length=30, verbose_name='email')),
                ('start_date', models.DateField(blank=True, help_text='start date of the rebate', null=True)),
                ('end_date', models.DateField(blank=True, help_text='end date of the rebate', null=True)),
                ('date_applied', models.DateField(default=django.utils.timezone.now, help_text='Date on which the rebate was applied')),
            ],
            options={
                'verbose_name': 'Left Short Rebate',
                'verbose_name_plural': 'Left Short Rebate',
            },
        ),
        migrations.CreateModel(
            name='Period',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Sno', models.IntegerField(default=0, help_text='This contains the serial number of the Period', verbose_name='Sno')),
                ('start_date', models.DateField(blank=True, help_text='This contains the start date of this Period for this semester', null=True)),
                ('end_date', models.DateField(blank=True, help_text='This contains the end date of this Period of this semester', null=True)),
            ],
            options={
                'verbose_name': 'Period Details',
                'verbose_name_plural': 'Period Details',
            },
        ),
        migrations.CreateModel(
            name='PeriodAutumn22',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Sno', models.IntegerField(default=0, help_text='This contains the serial number of the Period', verbose_name='Sno')),
                ('start_date', models.DateField(blank=True, help_text='This contains the start date of this Period for this semester', null=True)),
                ('end_date', models.DateField(blank=True, help_text='This contains the end date of this Period of this semester', null=True)),
            ],
            options={
                'verbose_name': 'Period Details for Autumn 2022',
                'verbose_name_plural': 'Period Details for Autumn 2022',
            },
        ),
        migrations.CreateModel(
            name='PeriodAutumn23',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Sno', models.IntegerField(default=0, help_text='This contains the serial number of the Period', verbose_name='Sno')),
                ('start_date', models.DateField(blank=True, help_text='This contains the start date of this Period for this semester', null=True)),
                ('end_date', models.DateField(blank=True, help_text='This contains the end date of this Period of this semester', null=True)),
            ],
            options={
                'verbose_name': 'Period Details for Autumn 2023',
                'verbose_name_plural': 'Period Details for Autumn 2023',
            },
        ),
        migrations.CreateModel(
            name='PeriodSpring23',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Sno', models.IntegerField(default=0, help_text='This contains the serial number of the Period', verbose_name='Sno')),
                ('start_date', models.DateField(blank=True, help_text='This contains the start date of this Period for this semester', null=True)),
                ('end_date', models.DateField(blank=True, help_text='This contains the end date of this Period of this semester', null=True)),
            ],
            options={
                'verbose_name': 'Period Details for Spring 2023',
                'verbose_name_plural': 'Period Details for Spring 2023',
            },
        ),
        migrations.CreateModel(
            name='Rule',
            fields=[
                ('sno', models.AutoField(default=1, primary_key=True, serialize=False)),
                ('rule', models.TextField(help_text='The text in the text field contains the rule that will show as one of the rules of the rule page.', verbose_name='Rule')),
            ],
            options={
                'verbose_name': 'Rule',
                'verbose_name_plural': 'Rules',
            },
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default=None, help_text='Name of the semester', max_length=30, null=True, verbose_name='Semester Name')),
            ],
        ),
        migrations.CreateModel(
            name='ShortRebate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('desc', models.TextField(help_text='The text in the text field contains the description of the short rebate.', verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Short Rebate',
                'verbose_name_plural': 'Short Rebate',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', help_text='This contains the name of the Student', max_length=50, null=True, verbose_name='Name of Student')),
                ('email', models.CharField(default='', max_length=50)),
                ('roll_no', models.CharField(blank=True, default='', help_text='This contains the roll number of the Student', max_length=10, null=True, verbose_name='Roll number of Student')),
                ('department', models.CharField(blank=True, default='', help_text='This contains the department of the Student', max_length=50, null=True, verbose_name='Department of Student')),
                ('degree', models.CharField(blank=True, default='', help_text='This contains the degree of the Student', max_length=10, null=True, verbose_name='Academic Program')),
                ('hostel', models.CharField(blank=True, default='', help_text='This contains the hostel of the Student', max_length=3, null=True, verbose_name='Hostel of Student')),
                ('room_no', models.CharField(blank=True, default='', help_text='This contains the room number of the Student', max_length=5, null=True, verbose_name='Room Number of Student')),
            ],
            options={
                'verbose_name': 'Student Details',
                'verbose_name_plural': 'Student Details',
            },
        ),
        migrations.CreateModel(
            name='Update',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('update', models.CharField(help_text='The text added in this text field will show as one of the update in the update section', max_length=120, verbose_name='update')),
                ('time_stamp', models.DateTimeField(auto_now_add=True, help_text='time stamp of the update will also show up on the page and this also decides the order of the updates that show up')),
            ],
            options={
                'verbose_name': 'Update',
                'verbose_name_plural': 'Updates',
            },
        ),
        migrations.CreateModel(
            name='UnregisteredStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(default='', max_length=30, verbose_name='email')),
                ('period', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='home.period')),
            ],
            options={
                'verbose_name': 'Unregistered Students',
                'verbose_name_plural': 'Unregistered Students',
            },
        ),
        migrations.CreateModel(
            name='TodayRebate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now, help_text='Date of the rebate')),
                ('Caterer', models.CharField(default='', max_length=30)),
                ('start_date', models.DateField(blank=True, help_text='start date of the rebate', null=True)),
                ('end_date', models.DateField(blank=True, help_text='end date of the rebate', null=True)),
                ('allocation_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='home.allocation')),
            ],
            options={
                'verbose_name': "Today's Rebate",
                'verbose_name_plural': "Today's Rebate",
            },
        ),
        migrations.CreateModel(
            name='StudentBills',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period1_short', models.IntegerField(default=0, null=True, verbose_name='Period 1 Short')),
                ('period1_long', models.IntegerField(default=0, null=True, verbose_name='Period 1 Long')),
                ('period1_high_tea', models.BooleanField(default=True, null=True, verbose_name='Period 1 High Tea')),
                ('period1_bill', models.IntegerField(default=0, null=True, verbose_name='Period 1 Rebate Amount')),
                ('period2_short', models.IntegerField(default=0, null=True, verbose_name='Period 2 Short')),
                ('period2_long', models.IntegerField(default=0, null=True, verbose_name='Period 2 Long')),
                ('period2_high_tea', models.BooleanField(default=True, null=True, verbose_name='Period 2 High Tea')),
                ('period2_bill', models.IntegerField(default=0, null=True, verbose_name='Period 2 Rebate Amount')),
                ('period3_short', models.IntegerField(default=0, null=True, verbose_name='Period 3 Short')),
                ('period3_long', models.IntegerField(default=0, null=True, verbose_name='Period 3 Long')),
                ('period3_high_tea', models.BooleanField(default=True, null=True, verbose_name='Period 3 High Tea')),
                ('period3_bill', models.IntegerField(default=0, null=True, verbose_name='Period 3 Rebate Amount')),
                ('period4_short', models.IntegerField(default=0, null=True, verbose_name='Period 4 Short')),
                ('period4_long', models.IntegerField(default=0, null=True, verbose_name='Period 4 Long')),
                ('period4_high_tea', models.BooleanField(default=True, null=True, verbose_name='Period 4 High Tea')),
                ('period4_bill', models.IntegerField(default=0, null=True, verbose_name='Period 4 Rebate Amount')),
                ('period5_short', models.IntegerField(default=0, null=True, verbose_name='Period 5 Short')),
                ('period5_long', models.IntegerField(default=0, null=True, verbose_name='Period 5 Long')),
                ('period5_high_tea', models.BooleanField(default=True, null=True, verbose_name='Period 5 High Tea')),
                ('period5_bill', models.IntegerField(default=0, null=True, verbose_name='Period 5 Rebate Amount')),
                ('period6_short', models.IntegerField(default=0, null=True, verbose_name='Period 6 Short')),
                ('period6_long', models.IntegerField(default=0, null=True, verbose_name='Period 6 Long')),
                ('period6_high_tea', models.BooleanField(default=True, null=True, verbose_name='Period 6 High Tea')),
                ('period6_bill', models.IntegerField(default=0, null=True, verbose_name='Period 6 Rebate Amount')),
                ('email', models.ForeignKey(default='', null=True, on_delete=django.db.models.deletion.SET_NULL, to='home.student')),
                ('semester', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='home.semester', verbose_name='Semester')),
            ],
            options={
                'verbose_name': 'Rebate Bill',
                'verbose_name_plural': 'Rebate Bills',
            },
        ),
        migrations.CreateModel(
            name='Scan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='Date of the scan details')),
                ('breakfast', models.BooleanField(help_text='This contains if the breeakfast was eaten by the student', verbose_name='Breakfast')),
                ('lunch', models.BooleanField(help_text='This contains if the lunch was eaten by the student', verbose_name='lunch')),
                ('high_tea', models.BooleanField(help_text='This contains if the high tea was eaten by the student', verbose_name='high_tea')),
                ('dinner', models.BooleanField(help_text='This contains if the dinner was eaten by the student', verbose_name='dinner')),
                ('student_id', models.ForeignKey(default=0, null=True, on_delete=django.db.models.deletion.SET_NULL, to='home.allocationspring23')),
            ],
            options={
                'verbose_name': 'Scan Details',
                'verbose_name_plural': 'Scan Details',
            },
        ),
        migrations.CreateModel(
            name='RebateSpring23',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period1_short', models.IntegerField(default=0, null=True, verbose_name='Period 1 Short')),
                ('period1_long', models.IntegerField(default=0, null=True, verbose_name='Period 1 Long')),
                ('period1_high_tea', models.BooleanField(default=True, verbose_name='Period 1 High Tea')),
                ('period1_bill', models.IntegerField(default=0, null=True, verbose_name='Period 1 Rebate Amount')),
                ('period2_short', models.IntegerField(default=0, null=True, verbose_name='Period 2 Short')),
                ('period2_long', models.IntegerField(default=0, null=True, verbose_name='Period 2 Long')),
                ('period2_high_tea', models.BooleanField(default=True, verbose_name='Period 2 High Tea')),
                ('period2_bill', models.IntegerField(default=0, null=True, verbose_name='Period 2 Rebate Amount')),
                ('period3_short', models.IntegerField(default=0, null=True, verbose_name='Period 3 Short')),
                ('period3_long', models.IntegerField(default=0, null=True, verbose_name='Period 3 Long')),
                ('period3_high_tea', models.BooleanField(default=True, verbose_name='Period 3 High Tea')),
                ('period3_bill', models.IntegerField(default=0, null=True, verbose_name='Period 3 Rebate Amount')),
                ('period4_short', models.IntegerField(default=0, null=True, verbose_name='Period 4 Short')),
                ('period4_long', models.IntegerField(default=0, null=True, verbose_name='Period 4 Long')),
                ('period4_high_tea', models.BooleanField(default=True, verbose_name='Period 4 High Tea')),
                ('period4_bill', models.IntegerField(default=0, null=True, verbose_name='Period 4 Rebate Amount')),
                ('period5_short', models.IntegerField(default=0, null=True, verbose_name='Period 5 Short')),
                ('period5_long', models.IntegerField(default=0, null=True, verbose_name='Period 5 Long')),
                ('period5_high_tea', models.BooleanField(default=True, verbose_name='Period 5 High Tea')),
                ('period5_bill', models.IntegerField(default=0, null=True, verbose_name='Period 5 Rebate Amount')),
                ('period6_short', models.IntegerField(default=0, null=True, verbose_name='Period 6 Short')),
                ('period6_long', models.IntegerField(default=0, null=True, verbose_name='Period 6 Long')),
                ('period6_high_tea', models.BooleanField(default=True, verbose_name='Period 6 High Tea')),
                ('period6_bill', models.IntegerField(default=0, null=True, verbose_name='Period 6 Rebate Amount')),
                ('email', models.ForeignKey(default='', null=True, on_delete=django.db.models.deletion.SET_NULL, to='home.student')),
            ],
            options={
                'verbose_name': 'Rebate Bill Spring 2023',
                'verbose_name_plural': 'Rebate Bills Spring 2023',
            },
        ),
        migrations.CreateModel(
            name='RebateAutumn23',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period1_short', models.IntegerField(default=0, null=True, verbose_name='Period 1 Short')),
                ('period1_long', models.IntegerField(default=0, null=True, verbose_name='Period 1 Long')),
                ('period1_high_tea', models.BooleanField(default=True, verbose_name='Period 1 High Tea')),
                ('period1_bill', models.IntegerField(default=0, null=True, verbose_name='Period 1 Rebate Amount')),
                ('period2_short', models.IntegerField(default=0, null=True, verbose_name='Period 2 Short')),
                ('period2_long', models.IntegerField(default=0, null=True, verbose_name='Period 2 Long')),
                ('period2_high_tea', models.BooleanField(default=True, verbose_name='Period 2 High Tea')),
                ('period2_bill', models.IntegerField(default=0, null=True, verbose_name='Period 2 Rebate Amount')),
                ('period3_short', models.IntegerField(default=0, null=True, verbose_name='Period 3 Short')),
                ('period3_long', models.IntegerField(default=0, null=True, verbose_name='Period 3 Long')),
                ('period3_high_tea', models.BooleanField(default=True, verbose_name='Period 3 High Tea')),
                ('period3_bill', models.IntegerField(default=0, null=True, verbose_name='Period 3 Rebate Amount')),
                ('period4_short', models.IntegerField(default=0, null=True, verbose_name='Period 4 Short')),
                ('period4_long', models.IntegerField(default=0, null=True, verbose_name='Period 4 Long')),
                ('period4_high_tea', models.BooleanField(default=True, verbose_name='Period 4 High Tea')),
                ('period4_bill', models.IntegerField(default=0, null=True, verbose_name='Period 4 Rebate Amount')),
                ('period5_short', models.IntegerField(default=0, null=True, verbose_name='Period 5 Short')),
                ('period5_long', models.IntegerField(default=0, null=True, verbose_name='Period 5 Long')),
                ('period5_high_tea', models.BooleanField(default=True, verbose_name='Period 5 High Tea')),
                ('period5_bill', models.IntegerField(default=0, null=True, verbose_name='Period 5 Rebate Amount')),
                ('period6_short', models.IntegerField(default=0, null=True, verbose_name='Period 6 Short')),
                ('period6_long', models.IntegerField(default=0, null=True, verbose_name='Period 6 Long')),
                ('period6_high_tea', models.BooleanField(default=True, verbose_name='Period 6 High Tea')),
                ('period6_bill', models.IntegerField(default=0, null=True, verbose_name='Period 6 Rebate Amount')),
                ('email', models.ForeignKey(default='', null=True, on_delete=django.db.models.deletion.SET_NULL, to='home.student')),
            ],
            options={
                'verbose_name': 'Rebate Bill Autumn 2023',
                'verbose_name_plural': 'Rebate Bills Autumn 2023',
            },
        ),
        migrations.CreateModel(
            name='RebateAutumn22',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period1_short', models.IntegerField(default=0, null=True, verbose_name='Period 1 Short')),
                ('period1_long', models.IntegerField(default=0, null=True, verbose_name='Period 1 Long')),
                ('period1_high_tea', models.BooleanField(default=True, null=True, verbose_name='Period 1 High Tea')),
                ('period1_bill', models.IntegerField(default=0, null=True, verbose_name='Period 1 Rebate Amount')),
                ('period2_short', models.IntegerField(default=0, null=True, verbose_name='Period 2 Short')),
                ('period2_long', models.IntegerField(default=0, null=True, verbose_name='Period 2 Long')),
                ('period2_high_tea', models.BooleanField(default=True, null=True, verbose_name='Period 2 High Tea')),
                ('period2_bill', models.IntegerField(default=0, null=True, verbose_name='Period 2 Rebate Amount')),
                ('period3_short', models.IntegerField(default=0, null=True, verbose_name='Period 3 Short')),
                ('period3_long', models.IntegerField(default=0, null=True, verbose_name='Period 3 Long')),
                ('period3_high_tea', models.BooleanField(default=True, null=True, verbose_name='Period 3 High Tea')),
                ('period3_bill', models.IntegerField(default=0, null=True, verbose_name='Period 3 Rebate Amount')),
                ('period4_short', models.IntegerField(default=0, null=True, verbose_name='Period 4 Short')),
                ('period4_long', models.IntegerField(default=0, null=True, verbose_name='Period 4 Long')),
                ('period4_high_tea', models.BooleanField(default=True, null=True, verbose_name='Period 4 High Tea')),
                ('period4_bill', models.IntegerField(default=0, null=True, verbose_name='Period 4 Rebate Amount')),
                ('period5_short', models.IntegerField(default=0, null=True, verbose_name='Period 5 Short')),
                ('period5_long', models.IntegerField(default=0, null=True, verbose_name='Period 5 Long')),
                ('period5_high_tea', models.BooleanField(default=True, null=True, verbose_name='Period 5 High Tea')),
                ('period5_bill', models.IntegerField(default=0, null=True, verbose_name='Period 5 Rebate Amount')),
                ('period6_short', models.IntegerField(default=0, null=True, verbose_name='Period 6 Short')),
                ('period6_long', models.IntegerField(default=0, null=True, verbose_name='Period 6 Long')),
                ('period6_high_tea', models.BooleanField(default=True, null=True, verbose_name='Period 6 High Tea')),
                ('period6_bill', models.IntegerField(default=0, null=True, verbose_name='Period 6 Rebate Amount')),
                ('email', models.ForeignKey(default='', null=True, on_delete=django.db.models.deletion.SET_NULL, to='home.student')),
            ],
            options={
                'verbose_name': 'Rebate Bill Autumn 2022',
                'verbose_name_plural': 'Rebate Bills Autumn 2022',
            },
        ),
        migrations.CreateModel(
            name='Rebate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(help_text='start date of the rebate')),
                ('end_date', models.DateField(help_text='end date of the rebate')),
                ('approved', models.BooleanField(default=False, help_text='tells if the rebate is approved')),
                ('date_applied', models.DateField(default=django.utils.timezone.now, help_text='Date on which the rebate was applied')),
                ('allocation_id', models.ForeignKey(default=0, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='allocation_id', to='home.allocation')),
                ('email', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='home.student', verbose_name='Student Email')),
            ],
            options={
                'verbose_name': 'Short Rebate Details',
                'verbose_name_plural': 'Short Rebate Details',
            },
        ),
        migrations.AddField(
            model_name='period',
            name='semester',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='home.semester', verbose_name='Semester'),
        ),
        migrations.CreateModel(
            name='LongRebate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(blank=True, help_text='start date of the rebate', null=True)),
                ('end_date', models.DateField(blank=True, help_text='end date of the rebate', null=True)),
                ('days', models.IntegerField(default=0, verbose_name='days')),
                ('approved', models.BooleanField(default=False, verbose_name='Approved')),
                ('date_applied', models.DateField(default=django.utils.timezone.now, help_text='Date on which the rebate was applied')),
                ('file', models.FileField(blank=True, default=None, null=True, upload_to='documents/', verbose_name='File')),
                ('email', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='home.student')),
            ],
            options={
                'verbose_name': 'Long Rebate Details',
                'verbose_name_plural': 'Long Rebate Details',
            },
        ),
        migrations.CreateModel(
            name='CatererBillsSpring23',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period1_bills', models.IntegerField(default=0, null=True, verbose_name='Period 1 Bill')),
                ('period2_bills', models.IntegerField(default=0, null=True, verbose_name='Period 2 Bill')),
                ('period3_bills', models.IntegerField(default=0, null=True, verbose_name='Period 3 Bill')),
                ('period4_bills', models.IntegerField(default=0, null=True, verbose_name='Period 4 Bill')),
                ('period5_bills', models.IntegerField(default=0, null=True, verbose_name='Period 5 Bill')),
                ('period6_bills', models.IntegerField(default=0, null=True, verbose_name='Period 6 Bill')),
                ('caterer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='home.caterer')),
            ],
            options={
                'verbose_name': 'Caterer Bill Spring 2023',
                'verbose_name_plural': 'Caterer Bills Spring 2023',
            },
        ),
        migrations.CreateModel(
            name='CatererBillsAutumn23',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period1_bills', models.IntegerField(default=0, null=True, verbose_name='Period 1 Bill')),
                ('period2_bills', models.IntegerField(default=0, null=True, verbose_name='Period 2 Bill')),
                ('period3_bills', models.IntegerField(default=0, null=True, verbose_name='Period 3 Bill')),
                ('period4_bills', models.IntegerField(default=0, null=True, verbose_name='Period 4 Bill')),
                ('period5_bills', models.IntegerField(default=0, null=True, verbose_name='Period 5 Bill')),
                ('period6_bills', models.IntegerField(default=0, null=True, verbose_name='Period 6 Bill')),
                ('caterer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='home.caterer')),
            ],
            options={
                'verbose_name': 'Caterer Bill Autumn 2023',
                'verbose_name_plural': 'Caterer Bills Autumn 2023',
            },
        ),
        migrations.CreateModel(
            name='CatererBillsAutumn22',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period1_bills', models.IntegerField(default=0, null=True, verbose_name='Period 1 Bill')),
                ('period2_bills', models.IntegerField(default=0, null=True, verbose_name='Period 2 Bill')),
                ('period3_bills', models.IntegerField(default=0, null=True, verbose_name='Period 3 Bill')),
                ('period4_bills', models.IntegerField(default=0, null=True, verbose_name='Period 4 Bill')),
                ('period5_bills', models.IntegerField(default=0, null=True, verbose_name='Period 5 Bill')),
                ('period6_bills', models.IntegerField(default=0, null=True, verbose_name='Period 6 Bill')),
                ('caterer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='home.caterer')),
            ],
            options={
                'verbose_name': 'Caterer Bill Autumn 2022',
                'verbose_name_plural': 'Caterer Bills Autumn 2022',
            },
        ),
        migrations.CreateModel(
            name='CatererBills',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period1_bills', models.IntegerField(default=0, null=True, verbose_name='Period 1 Bill')),
                ('period2_bills', models.IntegerField(default=0, null=True, verbose_name='Period 2 Bill')),
                ('period3_bills', models.IntegerField(default=0, null=True, verbose_name='Period 3 Bill')),
                ('period4_bills', models.IntegerField(default=0, null=True, verbose_name='Period 4 Bill')),
                ('period5_bills', models.IntegerField(default=0, null=True, verbose_name='Period 5 Bill')),
                ('period6_bills', models.IntegerField(default=0, null=True, verbose_name='Period 6 Bill')),
                ('caterer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='home.caterer')),
                ('semester', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='home.semester', verbose_name='Semester')),
            ],
            options={
                'verbose_name': 'Caterer Bill',
                'verbose_name_plural': 'Caterer Bills',
            },
        ),
        migrations.AddField(
            model_name='allocationspring23',
            name='month',
            field=models.ForeignKey(default=0, null=True, on_delete=django.db.models.deletion.SET_NULL, to='home.periodspring23'),
        ),
        migrations.AddField(
            model_name='allocationspring23',
            name='roll_no',
            field=models.ForeignKey(default=0, null=True, on_delete=django.db.models.deletion.SET_NULL, to='home.student'),
        ),
        migrations.CreateModel(
            name='AllocationForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heading', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='heading')),
                ('description', models.TextField(blank=True, default='', null=True, verbose_name='description')),
                ('active', models.BooleanField(blank=True, default=False, null=True, verbose_name='active')),
                ('start_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='Start Time')),
                ('end_time', models.DateTimeField(blank=True, null=True, verbose_name='End Time')),
                ('period', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='home.period')),
            ],
            options={
                'verbose_name': 'Allocation Form',
                'verbose_name_plural': 'Allocation Form',
            },
        ),
        migrations.CreateModel(
            name='AllocationAutumn23',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.CharField(blank=True, default=None, help_text='This contains the Allocation Id', max_length=30, null=True, verbose_name='Allocation Id')),
                ('caterer_name', models.CharField(blank=True, default='', help_text='The text in this text field contains the caterer name.', max_length=50, null=True, verbose_name='Caterer Name')),
                ('high_tea', models.BooleanField(blank=True, default=False, help_text='This contains the info if high tea is taken or not', null=True, verbose_name='High Tea')),
                ('first_pref', models.CharField(blank=True, default=None, help_text='This contians the first preference caterer of the student', max_length=10, null=True, verbose_name='First Preference')),
                ('second_pref', models.CharField(blank=True, default=None, help_text='This contians the first preference caterer of the student', max_length=10, null=True, verbose_name='Second Preference')),
                ('third_pref', models.CharField(blank=True, default=None, help_text='This contians the first preference caterer of the student', max_length=10, null=True, verbose_name='Third Preference')),
                ('month', models.ForeignKey(default=0, null=True, on_delete=django.db.models.deletion.SET_NULL, to='home.periodautumn23')),
                ('roll_no', models.ForeignKey(default=0, null=True, on_delete=django.db.models.deletion.SET_NULL, to='home.student')),
            ],
            options={
                'verbose_name': 'Allocation Details for Autumn 2023',
                'verbose_name_plural': 'Allocation Details for Autumn 2023',
            },
        ),
        migrations.CreateModel(
            name='AllocationAutumn22',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.CharField(blank=True, default=None, help_text='This contains the Allocation Id', max_length=30, null=True, verbose_name='Allocation Id')),
                ('caterer_name', models.CharField(blank=True, default='', help_text='The text in this text field contains the caterer name.', max_length=50, null=True, verbose_name='Caterer Name')),
                ('high_tea', models.BooleanField(blank=True, default=False, help_text='This contains the info if high tea is taken or not', null=True, verbose_name='High Tea')),
                ('first_pref', models.CharField(blank=True, default=None, help_text='This contians the first preference caterer of the student', max_length=10, null=True, verbose_name='First Preference')),
                ('second_pref', models.CharField(blank=True, default=None, help_text='This contians the first preference caterer of the student', max_length=10, null=True, verbose_name='Second Preference')),
                ('third_pref', models.CharField(blank=True, default=None, help_text='This contians the first preference caterer of the student', max_length=10, null=True, verbose_name='Third Preference')),
                ('month', models.ForeignKey(default=0, null=True, on_delete=django.db.models.deletion.SET_NULL, to='home.periodautumn22')),
                ('roll_no', models.ForeignKey(default=0, null=True, on_delete=django.db.models.deletion.SET_NULL, to='home.student')),
            ],
            options={
                'verbose_name': 'Allocation Details for Autumn 2022',
                'verbose_name_plural': 'Allocation Details for Autumn 2022',
            },
        ),
        migrations.AddField(
            model_name='allocation',
            name='caterer',
            field=models.ForeignKey(default=None, help_text='Contains the allocated caterer of the student', null=True, on_delete=django.db.models.deletion.SET_NULL, to='home.caterer'),
        ),
        migrations.AddField(
            model_name='allocation',
            name='email',
            field=models.ForeignKey(default=0, null=True, on_delete=django.db.models.deletion.SET_NULL, to='home.student'),
        ),
        migrations.AddField(
            model_name='allocation',
            name='period',
            field=models.ForeignKey(default=None, help_text='Contains the period of allocation', null=True, on_delete=django.db.models.deletion.SET_NULL, to='home.period'),
        ),
    ]
